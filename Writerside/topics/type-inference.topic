<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="자동 타입 지정" id="type-inference">

    <code-block lang="typescript">
        Start() {
            var a: number = 10;
        }
    </code-block>
    <p>위 코드와 같이 타입스크립트는 정적 타입 언어로서, 변수나 함수의 타입을 명시적으로 지정할 수 있습니다.</p>
    <p>그러나 때로는 타입을 명시하지 않고도 타입스크립트가 자동으로 타입을 추론하는 기능이 있습니다.</p>
    <p>이를 <control>자동 타입 지정</control> 또는 <control>타입 추론(Type Inference)</control>이라고 합니다.</p>

    <procedure title="변수 선언 시 초기값이 있는 경우" id="type-inference-1">
        <step>
            <code-block lang="typescript">
                Start() {
                    var a = 10;
                }
            </code-block>
            <p>초기값을 기준으로 변수 a의 타입은 자동으로 number 타입으로 타입이 추론됩니다.</p>
        </step>
    </procedure>

    <procedure title="메서드의 매개변수의 기본값이 있는 경우" id="type-inference-2">
        <step>
            <code-block lang="typescript">
                Greet(message = "hello") {
                    console.log(message);
                }
            </code-block>
            <p>메서드의 매개변수 message는 string 타입으로 추론됩니다.</p>
        </step>
    </procedure>

    <procedure title="메서드의 반환값이 있는 경우" id="type-inference-3">
        <step>
            <code-block lang="typescript">
                Start() {
                    var result = this.Add(5, 10);
                    console.log(`result = ${result}`);
                }

                Add(a: number, b: number) {
                    return a + b;
                }
            </code-block>
            <p>위와 같은 경우 Add 메서드의 결과는 number 타입 두개의 합이기 때문에, 반환값의 타입이 number로 추론이 가능합니다.</p>
            <p>반환값이 추론이 가능할 때에는 메서드의 반환값 타입과 반환값을 대입시킨 변수의 타입이 자동으로 지정됩니다.</p>
        </step>
    </procedure>
</topic>