<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="팝업 활성화 적용하기" id="7-3">

    <procedure title="팝업 스크립트 추가">
        <step>
            <img alt="7-3-1.png" src="7-3-1.png"/>
            <list>
                <li>해당 인벤토리 팝업을 담당할 스크립트를 추가합니다.</li>
                <li>InventoryPopup 이름으로 추가하였습니다.</li>
            </list>
        </step>
        <step>
            <code-block lang="typescript">
                export default class InventoryPopup extends ZepetoScriptBehaviour {

                    public closeButton: Button;

                }
            </code-block>
            <list>
                <li>닫기 버튼을 적용할 closeButton 프로퍼티를 추가합니다.</li>
            </list>
        </step>
        <step>
            <img alt="7-3-2.png" src="7-3-2.png"/>
            <list>
                <li>inventory_popup 오브젝트에 InventoryPopup 스크립트 컴포넌트를 추가합니다.</li>
                <li>closeButton 프로퍼티에 close_btn 오브젝트를 지정합니다.</li>
            </list>
        </step>
    </procedure>

    <procedure title="인벤토리 버튼 연결">
        <step>
            <code-block lang="typescript">
                export default class UiController extends ZepetoScriptBehaviour {

                    ...
                    public inventoryPopup: GameObject;

                    ...
                }
            </code-block>
            <list>
                <li>UiController에서 인벤토리 버튼을 클릭하면 인벤토리 팝업이 활성화되도록 inventoryPopup 프로퍼티를 추가합니다.</li>
                <li>인벤토리 버튼을 누르면 해당 오브젝트를 활성화 시키면 됩니다.</li>
            </list>
        </step>
        <step>
            <img alt="7-3-3.png" src="7-3-3.png"/>
            <list>
                <li>UiController의 inventoryPopup 프로퍼티에 inventory_popup 오브젝트를 연결합니다.</li>
            </list>
        </step>
        <step>
            <code-block lang="typescript">
                this.inventorytBtn.onClick.AddListener(() => {
                    this.inventoryPopup.SetActive(true);
                });
            </code-block>
            <list>
                <li>inventoryBtn을 클릭하는 이벤트 부분에서 해당 오브젝트를 활성화 하는 코드를 추가합니다.</li>
                <li>오브젝트는 SetActive 매서드로 활성화, 비활성화 시킬 수 있습니다.</li>
            </list>
        </step>
        <step>
            <img alt="7-3-4.png" src="7-3-4.png"/>
            <list>
                <li>최초에 인벤토리 팝업은 비활성화 상태로 시작해야되기 때문에 비활성 상태로 변경해줍니다.</li>
                <li>실행 후 인벤토리 버튼을 클릭하면 인벤토리 유아이가 활성화 되는 것을 확인할 수 있습니다.</li>
            </list>
        </step>
        <step>
            <code-block lang="typescript">
                export default class InventoryPopup extends ZepetoScriptBehaviour {

                    public closeButton: Button;

                    Start() {
                        this.closeButton.onClick.AddListener(() => {
                            this.gameObject.SetActive(false);
                        });
                    }

                }
            </code-block>
            <list>
                <li>closeButton을 클릭하면 본인 오브젝트를 비활성화 하는 코드를 추가합니다.</li>
                <li>InventoryPopup 스크립트는 인벤토리 팝업에 붙어있기 때문에 this.gameObject에 접근해서 비활성화 시키면 됩니다.</li>
                <li>실행 시, 인벤토리 버튼을 클릭하면 팝업이 켜지고, 닫기 버튼을 클릭하면 팝업이 닫힙니다.</li>
            </list>
        </step>
    </procedure>
</topic>