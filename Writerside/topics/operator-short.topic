<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="연산자 단축" id="operator-short">

    <code-block lang="typescript">
        Start() {
            var a: number = 0;
            a = a + 1;
            console.log(`a = ${a}`);
        }
    </code-block>
    <p>위와 같이 <control>number</control> 타입의 변수를 사용할 때, 연산자를 단축하여 간결하고 가독성 있게 표현하는 방법을 알아보도록 하겠습니다. </p>

    <procedure title="누적 대입 연산자" id="add-and-assignment">
        <step>
            <code-block lang="typescript">
                Start() {
                    var a: number = 0;
                    a += 1;
                    console.log(`a = ${a}`);
                }
            </code-block>
            <p><control>+=</control> 을 같이 사용하면, 해당 변수에 값을 변화시키면서 다시 대입해주는 역할을 합니다.</p>
        </step>
        <step>
            <code-block lang="typescript">
                Start() {
                    var a: number = 0;
                    a += 5;
                    console.log(`a = ${a}`);
                }
            </code-block>
            <p>1 이외의 값을 사용할 수도 있습니다.</p>
        </step>
        <step>
            <code-block lang="typescript">
                Start() {
                    var a: number = 0;
                    a *= 5;
                    console.log(`a = ${a}`);
                }
            </code-block>
            <p>더하기 연산 이외에도 빼기, 곱하기, 나누기 모두 가능합니다.</p>
        </step>
    </procedure>

    <procedure title="후위 증가" id="postfix-increment">
        <step>
            <code-block lang="typescript">
                Start() {
                    var a: number = 0;
                    a++;
                    console.log(`a = ${a}`);
                }
            </code-block>
            <p>값을 1만 증가시키는 경우, <control>++</control> 연산자를 사용하면 더욱 간결하게 표현할 수 있습니다.</p>
        </step>
        <step>
            <code-block lang="typescript">
                Start() {
                    var a: number = 0;
                    a--;
                    console.log(`a = ${a}`);
                }
            </code-block>
            <p>빼기도 가능합니다.</p>
        </step>
    </procedure>
</topic>